/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISablierV2LockupLinear,
  ISablierV2LockupLinearInterface,
} from "../../../../contracts/periphery/EscrowedEXA.sol/ISablierV2LockupLinear";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "streamId",
        type: "uint256",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "totalAmount",
            type: "uint128",
          },
          {
            internalType: "contract EXA",
            name: "asset",
            type: "address",
          },
          {
            internalType: "bool",
            name: "cancelable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "transferable",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint40",
                name: "cliff",
                type: "uint40",
              },
              {
                internalType: "uint40",
                name: "total",
                type: "uint40",
              },
            ],
            internalType: "struct Durations",
            name: "durations",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Broker",
            name: "broker",
            type: "tuple",
          },
        ],
        internalType: "struct CreateWithDurations",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createWithDurations",
    outputs: [
      {
        internalType: "uint256",
        name: "streamId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "streamId",
        type: "uint256",
      },
    ],
    name: "getRecipient",
    outputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "streamId",
        type: "uint256",
      },
    ],
    name: "isDepleted",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "streamId",
        type: "uint256",
      },
    ],
    name: "refundableAmountOf",
    outputs: [
      {
        internalType: "uint128",
        name: "refundableAmount",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "streamId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawMax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "streamId",
        type: "uint256",
      },
    ],
    name: "withdrawableAmountOf",
    outputs: [
      {
        internalType: "uint128",
        name: "withdrawableAmount",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ISablierV2LockupLinear__factory {
  static readonly abi = _abi;
  static createInterface(): ISablierV2LockupLinearInterface {
    return new Interface(_abi) as ISablierV2LockupLinearInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISablierV2LockupLinear {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ISablierV2LockupLinear;
  }
}
