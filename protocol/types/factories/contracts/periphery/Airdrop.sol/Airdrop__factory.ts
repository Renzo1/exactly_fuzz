/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Airdrop,
  AirdropInterface,
} from "../../../../contracts/periphery/Airdrop.sol/Airdrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "exa_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "root_",
        type: "bytes32",
      },
      {
        internalType: "contract ISablierV2LockupLinear",
        name: "sablier_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "streamId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "streamId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exa",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sablier",
    outputs: [
      {
        internalType: "contract ISablierV2LockupLinear",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "streams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561000f575f80fd5b5060405161082e38038061082e83398101604081905261002e916100d1565b6001600160a01b0380841660805260a0839052811660c05261004e610056565b505050610111565b5f54610100900460ff1615610069575f80fd5b5f5460ff908116146100b8575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146100ce575f80fd5b50565b5f805f606084860312156100e3575f80fd5b83516100ee816100ba565b602085015160408601519194509250610106816100ba565b809150509250925092565b60805160a05160c0516106d261015c5f395f818160830152818161021b01526103c701525f818161016a01526102c901525f818160c7015281816101f9015261036001526106d25ff3fe608060405234801561000f575f80fd5b506004361061007a575f3560e01c8063836992751161005857806383699275146100f3578063c884ef8314610120578063dadb4ce914610152578063ebf0c71714610165575f80fd5b8063482879aa1461007e5780637965b636146100c25780638129fc1c146100e9575b5f80fd5b6100a57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a57f000000000000000000000000000000000000000000000000000000000000000081565b6100f161018c565b005b61011261010136600461051d565b60026020525f908152604090205481565b6040519081526020016100b9565b61014261012e36600461051d565b60016020525f908152604090205460ff1681565b60405190151581526020016100b9565b61011261016036600461054a565b610289565b6101127f000000000000000000000000000000000000000000000000000000000000000081565b5f54610100900460ff16158080156101aa57505f54600160ff909116105b806101c35750303b1580156101c357505f5460ff166001145b6101cb575f80fd5b5f805460ff1916600117905580156101ec575f805461ff0019166101001790555b6102416001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000005f19610497565b8015610286575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b335f9081526001602052604081205460ff16156102a8576102a86105d6565b604080513360208201526001600160801b0386169181019190915261030d907f00000000000000000000000000000000000000000000000000000000000000009060600160408051601f198184030181529190528051602090910120859185916104df565b610319576103196105d6565b335f818152600160208181526040808420805460ff1916909317909255815160e081018352308152808201949094526001600160801b038816848301526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116606086015260808501849052825180840184528481526293a8008184015260a0860152825180840184528481529182019390935260c084015251631b4103a960e01b81527f000000000000000000000000000000000000000000000000000000000000000090911691631b4103a9916103fd91906004016105ea565b6020604051808303815f875af1158015610419573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061043d9190610685565b335f8181526002602090815260409182902084905590516001600160801b038816815292935083927f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7910160405180910390a39392505050565b5f60405163095ea7b360e01b5f52836004528260245260205f60445f80895af13d15601f3d1160015f511416171691505f6060528060405250806104d9575f80fd5b50505050565b5f81858560051b81015b8082101561051057813580841160051b93845260209384185260405f2092909101906104e9565b5050909214949350505050565b5f6020828403121561052d575f80fd5b81356001600160a01b0381168114610543575f80fd5b9392505050565b5f805f6040848603121561055c575f80fd5b83356001600160801b0381168114610572575f80fd5b9250602084013567ffffffffffffffff8082111561058e575f80fd5b818601915086601f8301126105a1575f80fd5b8135818111156105af575f80fd5b8760208260051b85010111156105c3575f80fd5b6020830194508093505050509250925092565b634e487b7160e01b5f52600160045260245ffd5b5f6101208201905060018060a01b038084511683528060208501511660208401526001600160801b0360408501511660408401528060608501511660608401525060808301511515608083015260a083015164ffffffffff8082511660a08501528060208301511660c0850152505060c083015161067e60e084018280516001600160a01b03168252602090810151910152565b5092915050565b5f60208284031215610695575f80fd5b505191905056fea26469706673582212200e0dc9b2ab8753e7a7090ff8af80d6498983e9915a09d48017f14b89a0ab041564736f6c63430008190033";

type AirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Airdrop__factory extends ContractFactory {
  constructor(...args: AirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    exa_: AddressLike,
    root_: BytesLike,
    sablier_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(exa_, root_, sablier_, overrides || {});
  }
  override deploy(
    exa_: AddressLike,
    root_: BytesLike,
    sablier_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(exa_, root_, sablier_, overrides || {}) as Promise<
      Airdrop & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Airdrop__factory {
    return super.connect(runner) as Airdrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropInterface {
    return new Interface(_abi) as AirdropInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Airdrop {
    return new Contract(address, _abi, runner) as unknown as Airdrop;
  }
}
