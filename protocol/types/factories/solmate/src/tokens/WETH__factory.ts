/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type { WETH, WETHInterface } from "../../../../solmate/src/tokens/WETH";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e060405234801561000f575f80fd5b506040518060400160405280600d81526020016c2bb930b83832b21022ba3432b960991b815250604051806040016040528060048152602001630ae8aa8960e31b8152506012825f908161006391906101c0565b50600161007083826101c0565b5060ff81166080524660a052610084610090565b60c052506102f1915050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f5f6040516100c0919061027f565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061015057607f821691505b60208210810361016e57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156101bb57805f5260205f20601f840160051c810160208510156101995750805b601f840160051c820191505b818110156101b8575f81556001016101a5565b50505b505050565b81516001600160401b038111156101d9576101d9610128565b6101ed816101e7845461013c565b84610174565b602080601f831160018114610220575f84156102095750858301515b5f19600386901b1c1916600185901b178555610277565b5f85815260208120601f198616915b8281101561024e5788860151825594840194600190910190840161022f565b508582101561026b57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f80835461028c8161013c565b600182811680156102a457600181146102b9576102e5565b60ff19841687528215158302870194506102e5565b875f526020805f205f5b858110156102dc5781548a8201529084019082016102c3565b50505082870194505b50929695505050505050565b60805160a05160c051610c2861031b5f395f61057e01525f61054901525f6101ba0152610c285ff3fe6080604052600436106100dc575f3560e01c806370a082311161007c578063a9059cbb11610057578063a9059cbb1461026c578063d0e30db01461028b578063d505accf14610293578063dd62ed3e146102b2575f80fd5b806370a08231146102025780637ecebe001461022d57806395d89b4114610258575f80fd5b806323b872dd116100b757806323b872dd1461016b5780632e1a7d4d1461018a578063313ce567146101a95780633644e515146101ee575f80fd5b806306fdde03146100ef578063095ea7b31461011957806318160ddd14610148575f80fd5b366100eb576100e96102e8565b005b5f80fd5b3480156100fa575f80fd5b50610103610329565b604051610110919061093c565b60405180910390f35b348015610124575f80fd5b5061013861013336600461098c565b6103b4565b6040519015158152602001610110565b348015610153575f80fd5b5061015d60025481565b604051908152602001610110565b348015610176575f80fd5b506101386101853660046109b4565b610420565b348015610195575f80fd5b506100e96101a43660046109ed565b6104fa565b3480156101b4575f80fd5b506101dc7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610110565b3480156101f9575f80fd5b5061015d610546565b34801561020d575f80fd5b5061015d61021c366004610a04565b60036020525f908152604090205481565b348015610238575f80fd5b5061015d610247366004610a04565b60056020525f908152604090205481565b348015610263575f80fd5b506101036105a0565b348015610277575f80fd5b5061013861028636600461098c565b6105ad565b6100e96102e8565b34801561029e575f80fd5b506100e96102ad366004610a24565b610610565b3480156102bd575f80fd5b5061015d6102cc366004610a91565b600460209081525f928352604080842090915290825290205481565b6102f233346107d5565b60405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b5f805461033590610ac2565b80601f016020809104026020016040519081016040528092919081815260200182805461036190610ac2565b80156103ac5780601f10610383576101008083540402835291602001916103ac565b820191905f5260205f20905b81548152906001019060200180831161038f57829003601f168201915b505050505081565b335f8181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061040e9086815260200190565b60405180910390a35060015b92915050565b6001600160a01b0383165f9081526004602090815260408083203384529091528120545f198114610479576104558382610b0e565b6001600160a01b0386165f9081526004602090815260408083203384529091529020555b6001600160a01b0385165f90815260036020526040812080548592906104a0908490610b0e565b90915550506001600160a01b038085165f81815260036020526040908190208054870190555190918716905f80516020610bd3833981519152906104e79087815260200190565b60405180910390a3506001949350505050565b610504338261082c565b60405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a2610543338261088b565b50565b5f7f0000000000000000000000000000000000000000000000000000000000000000461461057b576105766108a4565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6001805461033590610ac2565b335f908152600360205260408120805483919083906105cd908490610b0e565b90915550506001600160a01b0383165f81815260036020526040908190208054850190555133905f80516020610bd38339815191529061040e9086815260200190565b4284101561061c575f80fd5b5f6001610627610546565b6001600160a01b038a81165f8181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f1981840301815282825280516020918201205f84529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa15801561072f573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116158015906107655750876001600160a01b0316816001600160a01b0316145b61076d575f80fd5b6001600160a01b039081165f9081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b8060025f8282546107e69190610b21565b90915550506001600160a01b0382165f818152600360209081526040808320805486019055518481525f80516020610bd383398151915291015b60405180910390a35050565b6001600160a01b0382165f9081526003602052604081208054839290610853908490610b0e565b90915550506002805482900390556040518181525f906001600160a01b038416905f80516020610bd383398151915290602001610820565b5f805f805f85875af190508061089f575f80fd5b505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f5f6040516108d49190610b34565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610987575f80fd5b919050565b5f806040838503121561099d575f80fd5b6109a683610971565b946020939093013593505050565b5f805f606084860312156109c6575f80fd5b6109cf84610971565b92506109dd60208501610971565b9150604084013590509250925092565b5f602082840312156109fd575f80fd5b5035919050565b5f60208284031215610a14575f80fd5b610a1d82610971565b9392505050565b5f805f805f805f60e0888a031215610a3a575f80fd5b610a4388610971565b9650610a5160208901610971565b95506040880135945060608801359350608088013560ff81168114610a74575f80fd5b9699959850939692959460a0840135945060c09093013592915050565b5f8060408385031215610aa2575f80fd5b610aab83610971565b9150610ab960208401610971565b90509250929050565b600181811c90821680610ad657607f821691505b602082108103610af457634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561041a5761041a610afa565b8082018082111561041a5761041a610afa565b5f8083545f60018260011c91506001831680610b5157607f831692505b60208084108203610b7057634e487b7160e01b5f52602260045260245ffd5b818015610b845760018114610b9957610bc4565b60ff1986168952841515850289019650610bc4565b5f8a8152602090205f5b86811015610bbc5781548b820152908501908301610ba3565b505084890196505b50949897505050505050505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122010ec5d7cbdf30232acf234ee66e4180f969136f185e7b9bc7dfb7ac2c715b06664736f6c63430008190033";

type WETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WETH__factory extends ContractFactory {
  constructor(...args: WETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WETH & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WETH__factory {
    return super.connect(runner) as WETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETHInterface {
    return new Interface(_abi) as WETHInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): WETH {
    return new Contract(address, _abi, runner) as unknown as WETH;
  }
}
