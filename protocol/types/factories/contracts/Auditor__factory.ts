/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Auditor, AuditorInterface } from "../../contracts/Auditor";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceDecimals_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AuditorMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAccountLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientShortfall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPriceFeed",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketAlreadyListed",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketNotListed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "RemainingDebt",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract Market",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "adjustFactor",
        type: "uint256",
      },
    ],
    name: "AdjustFactorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "liquidator",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "lenders",
            type: "uint128",
          },
        ],
        indexed: false,
        internalType: "struct Auditor.LiquidationIncentive",
        name: "liquidationIncentive",
        type: "tuple",
      },
    ],
    name: "LiquidationIncentiveSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract Market",
        name: "market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "MarketEntered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract Market",
        name: "market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "MarketExited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract Market",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    name: "MarketListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract Market",
        name: "market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IPriceFeed",
        name: "priceFeed",
        type: "address",
      },
    ],
    name: "PriceFeedSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "ASSETS_THRESHOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BASE_FEED",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TARGET_HEALTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "contract Market",
        name: "marketToSimulate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "accountLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "sumCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sumDebtPlusEffects",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountMarkets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allMarkets",
    outputs: [
      {
        internalType: "contract Market[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPriceFeed",
        name: "priceFeed",
        type: "address",
      },
    ],
    name: "assetPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Market",
        name: "repayMarket",
        type: "address",
      },
      {
        internalType: "contract Market",
        name: "seizeMarket",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "actualRepayAssets",
        type: "uint256",
      },
    ],
    name: "calculateSeize",
    outputs: [
      {
        internalType: "uint256",
        name: "lendersAssets",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "seizeAssets",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Market",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
    ],
    name: "checkBorrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Market",
        name: "repayMarket",
        type: "address",
      },
      {
        internalType: "contract Market",
        name: "seizeMarket",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxLiquidatorAssets",
        type: "uint256",
      },
    ],
    name: "checkLiquidation",
    outputs: [
      {
        internalType: "uint256",
        name: "maxRepayAssets",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Market",
        name: "repayMarket",
        type: "address",
      },
      {
        internalType: "contract Market",
        name: "seizeMarket",
        type: "address",
      },
    ],
    name: "checkSeize",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Market",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "checkShortfall",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Market",
        name: "market",
        type: "address",
      },
      {
        internalType: "contract IPriceFeed",
        name: "priceFeed",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "adjustFactor",
        type: "uint128",
      },
    ],
    name: "enableMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Market",
        name: "market",
        type: "address",
      },
    ],
    name: "enterMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Market",
        name: "market",
        type: "address",
      },
    ],
    name: "exitMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "handleBadDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "liquidator",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "lenders",
            type: "uint128",
          },
        ],
        internalType: "struct Auditor.LiquidationIncentive",
        name: "liquidationIncentive_",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationIncentive",
    outputs: [
      {
        internalType: "uint128",
        name: "liquidator",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "lenders",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "marketList",
    outputs: [
      {
        internalType: "contract Market",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Market",
        name: "",
        type: "address",
      },
    ],
    name: "markets",
    outputs: [
      {
        internalType: "uint128",
        name: "adjustFactor",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isListed",
        type: "bool",
      },
      {
        internalType: "contract IPriceFeed",
        name: "priceFeed",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Market",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "adjustFactor",
        type: "uint128",
      },
    ],
    name: "setAdjustFactor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "liquidator",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "lenders",
            type: "uint128",
          },
        ],
        internalType: "struct Auditor.LiquidationIncentive",
        name: "liquidationIncentive_",
        type: "tuple",
      },
    ],
    name: "setLiquidationIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Market",
        name: "market",
        type: "address",
      },
      {
        internalType: "contract IPriceFeed",
        name: "priceFeed",
        type: "address",
      },
    ],
    name: "setPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561000f575f80fd5b5060405161288338038061288383398101604081905261002e916100cc565b608081905261003e8160126100f7565b61004990600a6101f0565b60a05261005781600a6101f0565b60c052610062610068565b50610202565b5f54610100900460ff161561007b575f80fd5b5f5460ff908116146100ca575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b5f602082840312156100dc575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561010a5761010a6100e3565b92915050565b600181815b8085111561014a57815f1904821115610130576101306100e3565b8085161561013d57918102915b93841c9390800290610115565b509250929050565b5f826101605750600161010a565b8161016c57505f61010a565b8160018114610182576002811461018c576101a8565b600191505061010a565b60ff84111561019d5761019d6100e3565b50506001821b61010a565b5060208310610133831016604e8410600b84101617156101cb575081810a61010a565b6101d58383610110565b805f19048211156101e8576101e86100e3565b029392505050565b5f6101fb8383610152565b9392505050565b60805160a05160c05161264961023a5f395f6115a301525f61164e01525f81816102220152818161104601526117a301526126495ff3fe608060405234801561000f575f80fd5b50600436106101dc575f3560e01c8063891f4b0811610109578063ae5395331161009e578063e16ee7201161006e578063e16ee720146104fc578063e7bf4b021461050f578063ede4edd014610522578063ff383ae614610535575f80fd5b8063ae539533146104b4578063b883b058146104c3578063d547741f146104d6578063e037945b146104e9575f80fd5b806391d14854116100d957806391d14854146104745780639e9d796714610487578063a217fddf1461049a578063a3883db5146104a1575f80fd5b8063891f4b081461037c5780638b9e81131461038f5780638c765e94146103975780638e8f294b146103d5575f80fd5b80632f2ff15d1161017f57806351e1498b1161014f57806351e1498b146103135780636e1b00311461032e57806376e11286146103565780637b9d893114610369575f80fd5b80632f2ff15d146102c557806336568abe146102d8578063375a7cba146102eb5780633fe5d42514610300575f80fd5b806311fd52e1116101ba57806311fd52e114610252578063216e7b5814610265578063232b956c14610278578063248a9ca3146102a3575f80fd5b806301ffc9a7146101e057806303f2a1ea1461020857806305300b281461021d575b5f80fd5b6101f36101ee3660046120d2565b610554565b60405190151581526020015b60405180910390f35b61021b610216366004612128565b61058a565b005b6102447f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016101ff565b61021b6102603660046121a1565b61064f565b6102446102733660046121bc565b610829565b61028b61028636600461220a565b610cd0565b6040516001600160a01b0390911681526020016101ff565b6102446102b136600461220a565b5f9081526065602052604090206001015490565b61021b6102d3366004612221565b610cf8565b61021b6102e6366004612221565b610d21565b6102f3610d3f565b6040516101ff919061224f565b61021b61030e3660046121a1565b610d9f565b61028b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b61034161033c3660046121bc565b610e55565b604080519283526020830191909152016101ff565b61021b61036436600461229b565b611012565b61021b61037736600461229b565b611143565b61021b61038a366004612128565b611267565b6102446112cd565b609a546103b5906001600160801b0380821691600160801b90041682565b604080516001600160801b039384168152929091166020830152016101ff565b6104306103e33660046121a1565b60986020525f9081526040902080546001909101546001600160801b0382169160ff600160801b8204811692600160881b8304821692600160901b9004909116906001600160a01b031685565b604080516001600160801b03909616865260ff9485166020870152939092169284019290925290151560608301526001600160a01b0316608082015260a0016101ff565b6101f3610482366004612221565b6112e3565b6103416104953660046122c7565b61130d565b6102445f81565b61021b6104af3660046122c7565b6114f9565b610244671158e460913d000081565b6102446104d13660046121a1565b61157a565b61021b6104e4366004612221565b61167a565b61021b6104f7366004612305565b61169e565b61021b61050a36600461229b565b611ae9565b61021b61051d366004612349565b611b54565b61021b6105303660046121a1565b611c12565b6102446105433660046121a1565b60976020525f908152604090205481565b5f6001600160e01b03198216637965db0b60e01b148061058457506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f54610100900460ff16158080156105a857505f54600160ff909116105b806105c15750303b1580156105c157505f5460ff166001145b6105c9575f80fd5b5f805460ff1916600117905580156105ea575f805461ff0019166101001790555b6105f2611d6c565b6105fc5f33611d80565b61060582611267565b801561064b575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b5050565b6001600160a01b0381165f908152609760205260408120549081905b811561078c576001821615610780575f6099828154811061068e5761068e61237c565b5f918252602080832091909101546001600160a01b0390811680845260989092526040808420905163ce96cb7760e01b81529189166004830152919350909190839063ce96cb7790602401602060405180830381865afa1580156106f4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107189190612390565b825460018401549192505f9161076d916001600160801b03169061076790610748906001600160a01b031661157a565b865461075f90600160801b900460ff16600a61249b565b869190611e05565b90611e23565b111561077c5750505050505050565b5050505b600191821c910161066b565b508190505f5b811561082357600182161561081757609981815481106107b4576107b461237c565b5f9182526020909120015460405163926bb63360e01b81526001600160a01b0386811660048301529091169063926bb633906024015f604051808303815f87803b158015610800575f80fd5b505af1158015610812573d5f803e3d5ffd5b505050505b600191821c9101610792565b50505050565b6001600160a01b0384165f90815260986020526040812054600160901b900460ff16158061087657506001600160a01b0384165f90815260986020526040902054600160901b900460ff16155b15610894576040516334b04fe360e11b815260040160405180910390fd5b6108be60405180606001604052805f81526020015f81526020015f6001600160801b031681525090565b6108eb6040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b6001600160a01b0385165f90815260976020526040812054905b8115610b05576001821615610af9575f609982815481106109285761092861237c565b5f9182526020808320909101546001600160a01b0390811680845260989092526040808420815160608101909252600181015493955093929091829161096e911661157a565b8152835460209091019061098d90600160801b900460ff16600a61249b565b815283546001600160801b031660209091015290506001600160a01b03808d16908416036109b9578096505b60405163014a296f60e01b81526001600160a01b038b811660048301525f91829186169063014a296f906024016040805180830381865afa158015610a00573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a2491906124a9565b845160208601519294509092505f91610a3e918491611e37565b905080895f01818151610a5191906124cb565b9052506040840151610a6d9082906001600160801b0316611e64565b89604001818151610a7e91906124cb565b90525083516020850151610a93918591611e05565b90508089602001818151610aa791906124cb565b9052506040840151610ac39082906001600160801b0316611e23565b89606001818151610ad491906124cb565b9052506001600160a01b03808f1690871603610af257608089018190525b5050505050505b600191821c9101610905565b508160400151826060015110610b2e5760405163095bf33360e01b815260040160405180910390fd5b604080518082018252609a546001600160801b038082168352600160801b909104166020808301919091528401519184015190915f91610b8891610b729190611e78565b85516060870151610b8291611e23565b90611e64565b90505f610bfe610bc78460200151855f0151670de0b6b3a7640000610bad91906124de565b610bb791906124de565b84906001600160801b0316611e23565b610bd990671158e460913d0000612505565b60408701516060880151610bec91611e64565b610b8290671158e460913d0000612505565b9050610cc1610c778760200151885f0151610c70610c2f610c27670de0b6b3a764000088611e8c565b8b5190611e78565b60208901518951610c6b9190610c4d90670de0b6b3a76400006124de565b610c5791906124de565b60808d0151906001600160801b0316611e64565b611e8c565b9190611e37565b610c8a670de0b6b3a76400005f19612518565b8a10610c965789611e8c565b610c6b8560200151670de0b6b3a7640000610cb191906124de565b8b906001600160801b0316611ea1565b9b9a5050505050505050505050565b60998181548110610cdf575f80fd5b5f918252602090912001546001600160a01b0316905081565b5f82815260656020526040902060010154610d1281611eb5565b610d1c8383611d80565b505050565b6001600160a01b0381163314610d35575f80fd5b61064b8282611ec2565b60606099805480602002602001604051908101604052809291908181526020018280548015610d9557602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610d77575b5050505050905090565b6001600160a01b0381165f9081526098602052604090208054600160901b900460ff16610ddf576040516334b04fe360e11b815260040160405180910390fd5b335f9081526097602052604090205481546001600160881b90910460ff161b80821615610e0c5750505050565b335f818152609760205260408082208585179055516001600160a01b038716917f3ab23ab0d51cccc0c3085aec51f99228625aa1a922b3a8ca89a26b0f2027a1a591a350505050565b60408051808201909152609a546001600160801b038082168352600160801b90910416602082018190525f918291610e8e908590611e23565b6001600160a01b038089165f9081526098602052604081206001015492955091610eb8911661157a565b6001600160a01b038089165f9081526098602052604081206001015492935091610ee2911661157a565b6001600160a01b038a165f9081526098602052604081205491925090610f21908490610f1990600160801b900460ff16600a61249b565b899190611e37565b9050611003610f9b8560200151865f0151670de0b6b3a7640000610f4591906124de565b610f4f91906124de565b6001600160a01b038c165f908152609860205260409020546001600160801b039190911690610f9590610f8d90600160801b900460ff16600a61249b565b859087611e37565b90611e78565b60405163ce96cb7760e01b81526001600160a01b038b811660048301528c169063ce96cb7790602401602060405180830381865afa158015610fdf573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c6b9190612390565b94505050505094509492505050565b5f61101c81611eb5565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee148015906110cb57507f0000000000000000000000000000000000000000000000000000000000000000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110a1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110c59190612537565b60ff1614155b156110e9576040516352cc3f7d60e01b815260040160405180910390fd5b6001600160a01b038381165f8181526098602052604080822060010180546001600160a01b0319169487169485179055517fd2d8394cf7549a5ddbc2ba3dd7b2de8d53c891472d1f2907008ed6a10045fdae9190a3505050565b6001600160a01b0382165f9081526098602052604090208054600160901b900460ff16611183576040516334b04fe360e11b815260040160405180910390fd5b6001600160a01b0382165f90815260976020526040812054825490916001600160881b90920460ff169190911b90818316900361122c57336001600160a01b038616146111e35760405163c4bbea6960e01b815260040160405180910390fd5b6001600160a01b038085165f8181526097602052604080822086861790555191928816917f3ab23ab0d51cccc0c3085aec51f99228625aa1a922b3a8ca89a26b0f2027a1a59190a35b5f80611239865f8061130d565b915091508082101561125e57604051630aeac0bb60e11b815260040160405180910390fd5b50505050505050565b5f61127181611eb5565b8151602080840180516001600160801b03908116600160801b02938116938417609a5560408051948552915116918301919091527f01681c947e6239f022bfc57fdcd1eecd249153804b38e0085d885e5aeed1b0549101610642565b6112e0670de0b6b3a76400005f19612518565b81565b5f9182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b5f8061133060405180606001604052805f81526020015f81526020015f81525090565b6001600160a01b0386165f90815260976020526040812054905b81156114ee5760018216156114e2575f6099828154811061136d5761136d61237c565b5f9182526020808320909101546001600160a01b0316808352609890915260408220805491935091906113ac9060ff600160801b90910416600a61249b565b825460405163014a296f60e01b81526001600160a01b038e811660048301529293506001600160801b039091169185169063014a296f906024016040805180830381865afa158015611400573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061142491906124a9565b602089015287526001830154611442906001600160a01b031661157a565b60408801819052875161145b9183916107679186611e05565b611465908a6124cb565b985061148881610b828960400151858b60200151611e379092919063ffffffff16565b61149290896124cb565b97508a6001600160a01b0316846001600160a01b0316036114dd5789156114dd576114d0816107678960400151858e611e059092919063ffffffff16565b6114da90896124cb565b97505b505050505b600191821c910161134a565b505050935093915050565b6001600160a01b038381165f90815260986020908152604080832054938616835260979091528120546001600160881b90930460ff169290921b909116900361154157505050565b5f8061154e84868561130d565b915091508082101561157357604051630aeac0bb60e11b815260040160405180910390fd5b5050505050565b5f73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038316016115c757507f0000000000000000000000000000000000000000000000000000000000000000919050565b5f826001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611604573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116289190612390565b90505f81136116495760405162bfc92160e01b815260040160405180910390fd5b6116737f000000000000000000000000000000000000000000000000000000000000000082612557565b9392505050565b5f8281526065602052604090206001015461169481611eb5565b610d1c8383611ec2565b5f6116a881611eb5565b306001600160a01b0316846001600160a01b0316633ec045a66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116ee573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611712919061256e565b6001600160a01b031614611739576040516316b2972f60e01b815260040160405180910390fd5b6001600160a01b0384165f90815260986020526040902054600160901b900460ff161561177957604051634d5eeb4960e01b815260040160405180910390fd5b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1480159061182857507f0000000000000000000000000000000000000000000000000000000000000000836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117fe573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118229190612537565b60ff1614155b15611846576040516352cc3f7d60e01b815260040160405180910390fd5b5f846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611883573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118a79190612537565b90506040518060a00160405280846001600160801b031681526020018260ff16815260200160998054905060ff168152602001600115158152602001856001600160a01b031681525060985f876001600160a01b03166001600160a01b031681526020019081526020015f205f820151815f015f6101000a8154816001600160801b0302191690836001600160801b031602179055506020820151815f0160106101000a81548160ff021916908360ff1602179055506040820151815f0160116101000a81548160ff021916908360ff1602179055506060820151815f0160126101000a81548160ff0219169083151502179055506080820151816001015f6101000a8154816001600160a01b0302191690836001600160a01b03160217905550905050609985908060018154018082558091505060019003905f5260205f20015f9091909190916101000a8154816001600160a01b0302191690836001600160a01b03160217905550846001600160a01b03167f4baa14f9cb96bf2fd4a6def4c4a6d8290bf89e48bfdd33d7586d8471674ac0e682604051611a53919060ff91909116815260200190565b60405180910390a2836001600160a01b0316856001600160a01b03167fd2d8394cf7549a5ddbc2ba3dd7b2de8d53c891472d1f2907008ed6a10045fdae60405160405180910390a36040516001600160801b03841681526001600160a01b038616907f2e6cff6894398a38e2957a38e34bbbcebbc7f1cd5ec3c6cc0172ea7b40bd5b829060200160405180910390a25050505050565b6001600160a01b0381165f90815260986020526040902054600160901b900460ff161580611b3657506001600160a01b0382165f90815260986020526040902054600160901b900460ff16155b1561064b576040516334b04fe360e11b815260040160405180910390fd5b5f611b5e81611eb5565b6001600160a01b0383165f90815260986020526040902054600160901b900460ff16611b9d576040516334b04fe360e11b815260040160405180910390fd5b6001600160a01b0383165f8181526098602090815260409182902080546fffffffffffffffffffffffffffffffff19166001600160801b03871690811790915591519182527f2e6cff6894398a38e2957a38e34bbbcebbc7f1cd5ec3c6cc0172ea7b40bd5b82910160405180910390a2505050565b6001600160a01b0381165f9081526098602052604090208054600160901b900460ff16611c52576040516334b04fe360e11b815260040160405180910390fd5b60405163014a296f60e01b81523360048201525f9081906001600160a01b0385169063014a296f906024016040805180830381865afa158015611c97573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611cbb91906124a9565b91509150805f14611cdf576040516304fdb01160e51b815260040160405180910390fd5b611cea8433846114f9565b335f90815260976020526040812054845490916001600160881b90920460ff169190911b908183169003611d2057505050505050565b335f81815260976020526040808220841986169055516001600160a01b038916917fe699a64c18b07ac5b7301aa273f36a2287239eb9501d81950672794afba29a0d91a3505050505050565b5f54610100900460ff16611d7e575f80fd5b565b611d8a82826112e3565b61064b575f8281526065602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611dc13390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b828202811515841585830485141716611e1c575f80fd5b0492915050565b5f6116738383670de0b6b3a7640000611e05565b828202811515841585830485141716611e4e575f80fd5b6001826001830304018115150290509392505050565b5f61167383670de0b6b3a764000084611e37565b5f6116738383670de0b6b3a7640000611e37565b5f818310611e9a5781611673565b5090919050565b5f61167383670de0b6b3a764000084611e05565b611ebf8133611f28565b50565b611ecc82826112e3565b1561064b575f8281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b611f3282826112e3565b61064b57611f3f81611f6e565b611f4a836020611f80565b604051602001611f5b9291906125a0565b6040516020818303038152906040525f80fd5b60606105846001600160a01b03831660145b60605f611f8e836002612557565b611f999060026124cb565b67ffffffffffffffff811115611fb157611fb16120f9565b6040519080825280601f01601f191660200182016040528015611fdb576020820181803683370190505b509050600360fc1b815f81518110611ff557611ff561237c565b60200101906001600160f81b03191690815f1a905350600f60fb1b816001815181106120235761202361237c565b60200101906001600160f81b03191690815f1a9053505f612045846002612557565b6120509060016124cb565b90505b60018111156120c7576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106120845761208461237c565b1a60f81b82828151811061209a5761209a61237c565b60200101906001600160f81b03191690815f1a90535060049490941c936120c0816125fe565b9050612053565b508315611673575f80fd5b5f602082840312156120e2575f80fd5b81356001600160e01b031981168114611673575f80fd5b634e487b7160e01b5f52604160045260245ffd5b80356001600160801b0381168114612123575f80fd5b919050565b5f60408284031215612138575f80fd5b6040516040810181811067ffffffffffffffff8211171561216757634e487b7160e01b5f52604160045260245ffd5b6040526121738361210d565b81526121816020840161210d565b60208201529392505050565b6001600160a01b0381168114611ebf575f80fd5b5f602082840312156121b1575f80fd5b81356116738161218d565b5f805f80608085870312156121cf575f80fd5b84356121da8161218d565b935060208501356121ea8161218d565b925060408501356121fa8161218d565b9396929550929360600135925050565b5f6020828403121561221a575f80fd5b5035919050565b5f8060408385031215612232575f80fd5b8235915060208301356122448161218d565b809150509250929050565b602080825282518282018190525f9190848201906040850190845b8181101561228f5783516001600160a01b03168352928401929184019160010161226a565b50909695505050505050565b5f80604083850312156122ac575f80fd5b82356122b78161218d565b915060208301356122448161218d565b5f805f606084860312156122d9575f80fd5b83356122e48161218d565b925060208401356122f48161218d565b929592945050506040919091013590565b5f805f60608486031215612317575f80fd5b83356123228161218d565b925060208401356123328161218d565b91506123406040850161210d565b90509250925092565b5f806040838503121561235a575f80fd5b82356123658161218d565b91506123736020840161210d565b90509250929050565b634e487b7160e01b5f52603260045260245ffd5b5f602082840312156123a0575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b600181815b808511156123f557815f19048211156123db576123db6123a7565b808516156123e857918102915b93841c93908002906123c0565b509250929050565b5f8261240b57506001610584565b8161241757505f610584565b816001811461242d576002811461243757612453565b6001915050610584565b60ff841115612448576124486123a7565b50506001821b610584565b5060208310610133831016604e8410600b8410161715612476575081810a610584565b61248083836123bb565b805f1904821115612493576124936123a7565b029392505050565b5f61167360ff8416836123fd565b5f80604083850312156124ba575f80fd5b505080516020909101519092909150565b80820180821115610584576105846123a7565b6001600160801b038181168382160190808211156124fe576124fe6123a7565b5092915050565b81810381811115610584576105846123a7565b5f8261253257634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215612547575f80fd5b815160ff81168114611673575f80fd5b8082028115828204841417610584576105846123a7565b5f6020828403121561257e575f80fd5b81516116738161218d565b5f81518060208401855e5f93019283525090919050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081525f6125d16017830185612589565b7001034b99036b4b9b9b4b733903937b6329607d1b81526125f56011820185612589565b95945050505050565b5f8161260c5761260c6123a7565b505f19019056fea26469706673582212204802916a3b9920cc44b939661951040fa0da815cb4d2d4072fc4ea56ecf120e364736f6c63430008190033";

type AuditorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuditorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Auditor__factory extends ContractFactory {
  constructor(...args: AuditorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    priceDecimals_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(priceDecimals_, overrides || {});
  }
  override deploy(
    priceDecimals_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(priceDecimals_, overrides || {}) as Promise<
      Auditor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Auditor__factory {
    return super.connect(runner) as Auditor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuditorInterface {
    return new Interface(_abi) as AuditorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Auditor {
    return new Contract(address, _abi, runner) as unknown as Auditor;
  }
}
