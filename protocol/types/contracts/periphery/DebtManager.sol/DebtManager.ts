/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../../common";

export type PermitStruct = {
  account: AddressLike;
  value: BigNumberish;
  deadline: BigNumberish;
  v: BigNumberish;
  r: BytesLike;
  s: BytesLike;
};

export type PermitStructOutput = [
  account: string,
  value: bigint,
  deadline: bigint,
  v: bigint,
  r: string,
  s: string
] & {
  account: string;
  value: bigint;
  deadline: bigint;
  v: bigint;
  r: string;
  s: string;
};

export type Permit2Struct = { deadline: BigNumberish; signature: BytesLike };

export type Permit2StructOutput = [deadline: bigint, signature: string] & {
  deadline: bigint;
  signature: string;
};

export interface DebtManagerInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "MAX_ALLOWANCE_SURPLUS"
      | "approve"
      | "auditor"
      | "balancerVault"
      | "deleverage(address,uint256,uint256)"
      | "deleverage(address,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))"
      | "initialize"
      | "leverage(address,uint256,uint256)"
      | "leverage(address,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))"
      | "leverage(address,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32),(uint256,bytes))"
      | "leverage(address,uint256,(address,uint256,uint256,uint8,bytes32,bytes32),(address,uint256,uint256,uint8,bytes32,bytes32))"
      | "permit2"
      | "receiveFlashLoan"
      | "rollFixed(address,uint256,uint256,uint256,uint256,uint256)"
      | "rollFixed(address,uint256,uint256,uint256,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))"
      | "rollFixedToFloating(address,uint256,uint256,uint256)"
      | "rollFixedToFloating(address,uint256,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))"
      | "rollFloatingToFixed(address,uint256,uint256,uint256)"
      | "rollFloatingToFixed(address,uint256,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))"
  ): FunctionFragment;

  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;

  encodeFunctionData(
    functionFragment: "MAX_ALLOWANCE_SURPLUS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "approve",
    values: [AddressLike]
  ): string;
  encodeFunctionData(functionFragment: "auditor", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "balancerVault",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "deleverage(address,uint256,uint256)",
    values: [AddressLike, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "deleverage(address,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))",
    values: [AddressLike, BigNumberish, BigNumberish, PermitStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "leverage(address,uint256,uint256)",
    values: [AddressLike, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "leverage(address,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))",
    values: [AddressLike, BigNumberish, BigNumberish, PermitStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "leverage(address,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32),(uint256,bytes))",
    values: [
      AddressLike,
      BigNumberish,
      BigNumberish,
      PermitStruct,
      Permit2Struct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "leverage(address,uint256,(address,uint256,uint256,uint8,bytes32,bytes32),(address,uint256,uint256,uint8,bytes32,bytes32))",
    values: [AddressLike, BigNumberish, PermitStruct, PermitStruct]
  ): string;
  encodeFunctionData(functionFragment: "permit2", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "receiveFlashLoan",
    values: [AddressLike[], BigNumberish[], BigNumberish[], BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "rollFixed(address,uint256,uint256,uint256,uint256,uint256)",
    values: [
      AddressLike,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "rollFixed(address,uint256,uint256,uint256,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))",
    values: [
      AddressLike,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      PermitStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "rollFixedToFloating(address,uint256,uint256,uint256)",
    values: [AddressLike, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "rollFixedToFloating(address,uint256,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))",
    values: [
      AddressLike,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      PermitStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "rollFloatingToFixed(address,uint256,uint256,uint256)",
    values: [AddressLike, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "rollFloatingToFixed(address,uint256,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))",
    values: [
      AddressLike,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      PermitStruct
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "MAX_ALLOWANCE_SURPLUS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "approve", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "auditor", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "balancerVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deleverage(address,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deleverage(address,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "leverage(address,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "leverage(address,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "leverage(address,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32),(uint256,bytes))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "leverage(address,uint256,(address,uint256,uint256,uint8,bytes32,bytes32),(address,uint256,uint256,uint8,bytes32,bytes32))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "permit2", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "receiveFlashLoan",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rollFixed(address,uint256,uint256,uint256,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rollFixed(address,uint256,uint256,uint256,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rollFixedToFloating(address,uint256,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rollFixedToFloating(address,uint256,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rollFloatingToFixed(address,uint256,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rollFloatingToFixed(address,uint256,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))",
    data: BytesLike
  ): Result;
}

export namespace InitializedEvent {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface DebtManager extends BaseContract {
  connect(runner?: ContractRunner | null): DebtManager;
  waitForDeployment(): Promise<this>;

  interface: DebtManagerInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  MAX_ALLOWANCE_SURPLUS: TypedContractMethod<[], [bigint], "view">;

  approve: TypedContractMethod<[market: AddressLike], [void], "nonpayable">;

  auditor: TypedContractMethod<[], [string], "view">;

  balancerVault: TypedContractMethod<[], [string], "view">;

  "deleverage(address,uint256,uint256)": TypedContractMethod<
    [market: AddressLike, withdraw: BigNumberish, ratio: BigNumberish],
    [void],
    "nonpayable"
  >;

  "deleverage(address,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))": TypedContractMethod<
    [
      market: AddressLike,
      withdraw: BigNumberish,
      ratio: BigNumberish,
      p: PermitStruct
    ],
    [void],
    "nonpayable"
  >;

  initialize: TypedContractMethod<[], [void], "nonpayable">;

  "leverage(address,uint256,uint256)": TypedContractMethod<
    [market: AddressLike, deposit: BigNumberish, ratio: BigNumberish],
    [void],
    "nonpayable"
  >;

  "leverage(address,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))": TypedContractMethod<
    [
      market: AddressLike,
      deposit: BigNumberish,
      ratio: BigNumberish,
      marketPermit: PermitStruct
    ],
    [void],
    "nonpayable"
  >;

  "leverage(address,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32),(uint256,bytes))": TypedContractMethod<
    [
      market: AddressLike,
      deposit: BigNumberish,
      ratio: BigNumberish,
      marketPermit: PermitStruct,
      assetPermit: Permit2Struct
    ],
    [void],
    "nonpayable"
  >;

  "leverage(address,uint256,(address,uint256,uint256,uint8,bytes32,bytes32),(address,uint256,uint256,uint8,bytes32,bytes32))": TypedContractMethod<
    [
      market: AddressLike,
      ratio: BigNumberish,
      marketPermit: PermitStruct,
      assetPermit: PermitStruct
    ],
    [void],
    "nonpayable"
  >;

  permit2: TypedContractMethod<[], [string], "view">;

  receiveFlashLoan: TypedContractMethod<
    [
      arg0: AddressLike[],
      arg1: BigNumberish[],
      arg2: BigNumberish[],
      userData: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  "rollFixed(address,uint256,uint256,uint256,uint256,uint256)": TypedContractMethod<
    [
      market: AddressLike,
      repayMaturity: BigNumberish,
      borrowMaturity: BigNumberish,
      maxRepayAssets: BigNumberish,
      maxBorrowAssets: BigNumberish,
      percentage: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  "rollFixed(address,uint256,uint256,uint256,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))": TypedContractMethod<
    [
      market: AddressLike,
      repayMaturity: BigNumberish,
      borrowMaturity: BigNumberish,
      maxRepayAssets: BigNumberish,
      maxBorrowAssets: BigNumberish,
      percentage: BigNumberish,
      p: PermitStruct
    ],
    [void],
    "nonpayable"
  >;

  "rollFixedToFloating(address,uint256,uint256,uint256)": TypedContractMethod<
    [
      market: AddressLike,
      repayMaturity: BigNumberish,
      maxRepayAssets: BigNumberish,
      percentage: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  "rollFixedToFloating(address,uint256,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))": TypedContractMethod<
    [
      market: AddressLike,
      repayMaturity: BigNumberish,
      maxRepayAssets: BigNumberish,
      percentage: BigNumberish,
      p: PermitStruct
    ],
    [void],
    "nonpayable"
  >;

  "rollFloatingToFixed(address,uint256,uint256,uint256)": TypedContractMethod<
    [
      market: AddressLike,
      borrowMaturity: BigNumberish,
      maxBorrowAssets: BigNumberish,
      percentage: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  "rollFloatingToFixed(address,uint256,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))": TypedContractMethod<
    [
      market: AddressLike,
      borrowMaturity: BigNumberish,
      maxBorrowAssets: BigNumberish,
      percentage: BigNumberish,
      p: PermitStruct
    ],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "MAX_ALLOWANCE_SURPLUS"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "approve"
  ): TypedContractMethod<[market: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "auditor"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "balancerVault"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "deleverage(address,uint256,uint256)"
  ): TypedContractMethod<
    [market: AddressLike, withdraw: BigNumberish, ratio: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "deleverage(address,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))"
  ): TypedContractMethod<
    [
      market: AddressLike,
      withdraw: BigNumberish,
      ratio: BigNumberish,
      p: PermitStruct
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "initialize"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "leverage(address,uint256,uint256)"
  ): TypedContractMethod<
    [market: AddressLike, deposit: BigNumberish, ratio: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "leverage(address,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))"
  ): TypedContractMethod<
    [
      market: AddressLike,
      deposit: BigNumberish,
      ratio: BigNumberish,
      marketPermit: PermitStruct
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "leverage(address,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32),(uint256,bytes))"
  ): TypedContractMethod<
    [
      market: AddressLike,
      deposit: BigNumberish,
      ratio: BigNumberish,
      marketPermit: PermitStruct,
      assetPermit: Permit2Struct
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "leverage(address,uint256,(address,uint256,uint256,uint8,bytes32,bytes32),(address,uint256,uint256,uint8,bytes32,bytes32))"
  ): TypedContractMethod<
    [
      market: AddressLike,
      ratio: BigNumberish,
      marketPermit: PermitStruct,
      assetPermit: PermitStruct
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "permit2"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "receiveFlashLoan"
  ): TypedContractMethod<
    [
      arg0: AddressLike[],
      arg1: BigNumberish[],
      arg2: BigNumberish[],
      userData: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "rollFixed(address,uint256,uint256,uint256,uint256,uint256)"
  ): TypedContractMethod<
    [
      market: AddressLike,
      repayMaturity: BigNumberish,
      borrowMaturity: BigNumberish,
      maxRepayAssets: BigNumberish,
      maxBorrowAssets: BigNumberish,
      percentage: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "rollFixed(address,uint256,uint256,uint256,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))"
  ): TypedContractMethod<
    [
      market: AddressLike,
      repayMaturity: BigNumberish,
      borrowMaturity: BigNumberish,
      maxRepayAssets: BigNumberish,
      maxBorrowAssets: BigNumberish,
      percentage: BigNumberish,
      p: PermitStruct
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "rollFixedToFloating(address,uint256,uint256,uint256)"
  ): TypedContractMethod<
    [
      market: AddressLike,
      repayMaturity: BigNumberish,
      maxRepayAssets: BigNumberish,
      percentage: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "rollFixedToFloating(address,uint256,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))"
  ): TypedContractMethod<
    [
      market: AddressLike,
      repayMaturity: BigNumberish,
      maxRepayAssets: BigNumberish,
      percentage: BigNumberish,
      p: PermitStruct
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "rollFloatingToFixed(address,uint256,uint256,uint256)"
  ): TypedContractMethod<
    [
      market: AddressLike,
      borrowMaturity: BigNumberish,
      maxBorrowAssets: BigNumberish,
      percentage: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "rollFloatingToFixed(address,uint256,uint256,uint256,(address,uint256,uint256,uint8,bytes32,bytes32))"
  ): TypedContractMethod<
    [
      market: AddressLike,
      borrowMaturity: BigNumberish,
      maxBorrowAssets: BigNumberish,
      percentage: BigNumberish,
      p: PermitStruct
    ],
    [void],
    "nonpayable"
  >;

  getEvent(
    key: "Initialized"
  ): TypedContractEvent<
    InitializedEvent.InputTuple,
    InitializedEvent.OutputTuple,
    InitializedEvent.OutputObject
  >;

  filters: {
    "Initialized(uint8)": TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;
    Initialized: TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;
  };
}
