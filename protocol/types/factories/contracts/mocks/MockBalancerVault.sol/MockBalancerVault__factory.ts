/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockBalancerVault,
  MockBalancerVaultInterface,
} from "../../../../contracts/mocks/MockBalancerVault.sol/MockBalancerVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IFlashLoanRecipient",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract ERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "flashLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260015f553480156012575f80fd5b50610790806100205f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c80635c38449e1461002d575b5f80fd5b61004061003b366004610554565b610042565b005b5f5460011461004f575f80fd5b60025f55815183511461006457610064610647565b5f835167ffffffffffffffff81111561007f5761007f610414565b6040519080825280602002602001820160405280156100a8578160200160208202803683370190505b5090505f805b8551811015610245575f8682815181106100ca576100ca61065b565b602002602001015190505f8683815181106100e7576100e761065b565b60200260200101519050836001600160a01b0316826001600160a01b0316115f6001600160a01b0316836001600160a01b03161461014c576040518060400160405280600f81526020016e556e736f7274656420746f6b656e7360881b815250610170565b6040518060400160405280600a8152602001692d32b937903a37b5b2b760b11b8152505b50610179575f80fd5b6040516370a0823160e01b815230600482015291935083916001600160a01b038316906370a0823190602401602060405180830381865afa1580156101c0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101e4919061066f565b8584815181106101f6576101f661065b565b602002602001018181525050808584815181106102155761021561065b565b60200260200101511015610227575f80fd5b61023b6001600160a01b0383168a836103b5565b50506001016100ae565b50856001600160a01b031663f04f27078686885167ffffffffffffffff81111561027157610271610414565b60405190808252806020026020018201604052801561029a578160200160208202803683370190505b50876040518563ffffffff1660e01b81526004016102bb94939291906106c0565b5f604051808303815f87803b1580156102d2575f80fd5b505af11580156102e4573d5f803e3d5ffd5b505050505f5b85518110156103a8575f8682815181106103065761030661065b565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610354573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610378919061066f565b905083828151811061038c5761038c61065b565b602002602001015181101561039f575f80fd5b506001016102ea565b505060015f555050505050565b5f60405163a9059cbb60e01b5f52836004528260245260205f60445f80895af13d15601f3d1160015f511416171691505f6060528060405250806103f7575f80fd5b50505050565b6001600160a01b0381168114610411575f80fd5b50565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561045157610451610414565b604052919050565b5f67ffffffffffffffff82111561047257610472610414565b5060051b60200190565b5f82601f83011261048b575f80fd5b813560206104a061049b83610459565b610428565b8083825260208201915060208460051b8701019350868411156104c1575f80fd5b602086015b848110156104dd57803583529183019183016104c6565b509695505050505050565b5f82601f8301126104f7575f80fd5b813567ffffffffffffffff81111561051157610511610414565b610524601f8201601f1916602001610428565b818152846020838601011115610538575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f8060808587031215610567575f80fd5b8435610572816103fd565b935060208581013567ffffffffffffffff8082111561058f575f80fd5b818801915088601f8301126105a2575f80fd5b81356105b061049b82610459565b81815260059190911b8301840190848101908b8311156105ce575f80fd5b938501935b828510156105f55784356105e6816103fd565b825293850193908501906105d3565b97505050604088013592508083111561060c575f80fd5b61061889848a0161047c565b9450606088013592508083111561062d575f80fd5b505061063b878288016104e8565b91505092959194509250565b634e487b7160e01b5f52600160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f6020828403121561067f575f80fd5b5051919050565b5f815180845260208085019450602084015f5b838110156106b557815187529582019590820190600101610699565b509495945050505050565b608080825285519082018190525f9060209060a0840190828901845b828110156107015781516001600160a01b0316845292840192908401906001016106dc565b505050838103828501526107158188610686565b905083810360408501526107298187610686565b905083810360608501528451808252808387018484015e5f828201840152601f01601f19160101969550505050505056fea264697066735822122067c7883656cda0f8634c477119fd792c3155bcea264c5f1cc8b38735585e83af64736f6c63430008190033";

type MockBalancerVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockBalancerVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockBalancerVault__factory extends ContractFactory {
  constructor(...args: MockBalancerVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockBalancerVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockBalancerVault__factory {
    return super.connect(runner) as MockBalancerVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBalancerVaultInterface {
    return new Interface(_abi) as MockBalancerVaultInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockBalancerVault {
    return new Contract(address, _abi, runner) as unknown as MockBalancerVault;
  }
}
