/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  InterestRateModel,
  InterestRateModelInterface,
  ParametersStruct,
} from "../../contracts/InterestRateModel";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "naturalRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxUtilization",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "naturalUtilization",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "growthSpeed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sigmoidSpeed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spreadFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maturitySpeed",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "timePreference",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "fixedAllocation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxRate",
            type: "uint256",
          },
        ],
        internalType: "struct Parameters",
        name: "p",
        type: "tuple",
      },
      {
        internalType: "contract Market",
        name: "market_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyMatured",
    type: "error",
  },
  {
    inputs: [],
    name: "UtilizationExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "fixedAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maturity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "supplied",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fixedBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fixedCurveA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fixedCurveB",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fixedMaxUtilization",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maturity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPools",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "uFixed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "uFloating",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "uGlobal",
        type: "uint256",
      },
    ],
    name: "fixedRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "floatingCurveA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "floatingCurveB",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "floatingMaxUtilization",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "uFloating",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "uGlobal",
        type: "uint256",
      },
    ],
    name: "floatingRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "floatingRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "growthSpeed",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "market",
    outputs: [
      {
        internalType: "contract Market",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maturitySpeed",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "minFixedRate",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "utilization",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "naturalUtilization",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parameters",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "naturalRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxUtilization",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "naturalUtilization",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "growthSpeed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sigmoidSpeed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spreadFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maturitySpeed",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "timePreference",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "fixedAllocation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxRate",
            type: "uint256",
          },
        ],
        internalType: "struct Parameters",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sigmoidSpeed",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "spreadFactor",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timePreference",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610280604052348015610010575f80fd5b50604051612ee0380380612ee083398101604081905261002f91610db0565b81511580159061004257505f8260200151115b80156100595750670de0b6b3a76400008260400151115b801561006857505f8260600151115b801561007f5750670de0b6b3a76400008260600151105b801561008e57505f8260800151115b801561009d57505f8260a00151115b80156100ac57505f8260c00151115b80156100bb57505f8260e00151115b80156100cb57505f826101400151115b80156100e55750680821ab0d441498000082610140015111155b6100f1576100f1610e63565b81515f556020820151600155604082015160025560608201516003556080820151600481905560a083015160055560c083015160065560e0830151600755610100830151600855610120830151600955610140830151600a5561015390610367565b6101005260a082015161016590610367565b6101205260c082015161017790610367565b6101405260e082015161018990610367565b61016052604082015160c05260608201805160e052516101b190670de0b6b3a7640000610e8b565b604083015160608401516101c59082610ea2565b845f015161022b610220670de0b6b3a764000061020360028a606001516101ec9190610ec9565b6101fe90670de0b6b3a7640000610edc565b61037f565b610100516102119190610f02565b61021b9190610f31565b610522565b6020880151906106a6565b6102359190610ea2565b61023f9190610e8b565b6102499190610e8b565b6102539190610ec9565b6080819052604083015161026791906106c3565b82516102739190610edc565b60a0526001600160a01b038116610200819052610290575f610294565b6080515b610220526001600160a01b0381166102ac575f6102b0565b60a0515b610240526001600160a01b0381166102c8575f6102ce565b81604001515b61026052610100820151610180526101208201516101a0526101408201516101c05260e051610316906101fe9061030d90670de0b6b3a7640000610ea2565b60e051906106c3565b6101e05261034c61032a6224ea0042610f5d565b6103376224ea0042610f70565b6103419190610ea2565b6002600180826106d7565b5061035f670de0b6b3a763ffff80610a16565b505050610fc4565b5f6001600160ff1b0382111561037b575f80fd5b5090565b5f80821361038b575f80fd5b5f606061039784610be3565b03609f8181039490941b90931c6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd190190910260016c0504a838426634cdd8738f543560611b03190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b393909302929092017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b5f680248ce36a70cb26b3e19821361053b57505f919050565b680755bf798b4a1bf1e5821261054f575f80fd5b6503782dace9d9604e83901b0591505f60606bb17217f7d1cf79abc9e3b39884821b056b80000000000000000000000001901d6bb17217f7d1cf79abc9e3b39881029093036c240c330e9fb2d9cbaf0fd5aafb1981018102606090811d6d0277594991cfc85f6e2461837cd9018202811d6d1a521255e34f6a5061b25ef1c9c319018202811d6db1bbb201f443cf962f1a1d3db4a5018202811d6e02c72388d9f74f51a9331fed693f1419018202811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765084018402831d9081019084016d01d3967ed30fc4f89c02bab5708119010290911d6e0587f503bb6ea29d25fcb7401964500190910279d835ebba824c98fb31b83b2ca45c000000000000000000000000010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b5f6106ba8383670de0b6b3a7640000610c50565b90505b92915050565b5f6106ba83670de0b6b3a764000084610c7d565b5f8542106106f8576040516305a29e1160e51b815260040160405180910390fd5b81841115610719576040516386a8c2bd60e01b815260040160405180910390fd5b815f036107315761072a835f610a16565b9050610a0d565b61075e6040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b6101a05161077e9061077888670de0b6b3a7640000610e8b565b906106c3565b80825261079c9061079790670de0b6b3a7640000610e8b565b610c9b565b60208201526101a0516107d5906ec097ce7bc90715b34b9f1000000000906107c49086610e8b565b6107ce888a610e8b565b9190610c7d565b604082015260208101516107e890610367565b6107fa90670de0b6b3a7640000610edc565b602082015161080890610367565b6108129190610f02565b815161081d90610367565b61082f90671bc16d674ec80000610edc565b610848906ec097ce7bc90715b34b9f1000000000610f02565b6108529190610f31565b60608201526108926108676224ea0042610f5d565b6108746224ea0089610e8b565b61087e9042610f70565b6108889190610ea2565b610778428a610ea2565b8160800181815250505f6109cb670de0b6b3a764000080670de0b6b3a7640000806108c6876040015161036760201b60201c565b60608801516108dd90670de0b6b3a7640000610edc565b6108e79190610f02565b6108f19190610f31565b670de0b6b3a764000061091d6109188960400151670de0b6b3a76400006107979190610e8b565b610367565b886060015161092c9190610f02565b6109369190610f31565b6109409190610f83565b61094a9190610edc565b610140516109589190610f02565b6109629190610f31565b610180516109709190610f83565b6109a0670de0b6b3a76400006109926101fe886080015161036760201b60201c565b610160516102119190610f02565b6109aa9190610f02565b6109b49190610f31565b6109c690670de0b6b3a7640000610f83565b610d3f565b90505f6109d88686610a16565b6101c0519091506109e990836106c3565b81106109fd576101c0519350505050610a0d565b610a0781836106a6565b93505050505b95945050505050565b5f81831115610a38576040516386a8c2bd60e01b815260040160405180910390fd5b670de0b6b3a76400008210610a4f57505f196106bd565b5f610a7d60a051610a736109188760c051610a6a9190610ea2565b608051906106c3565b6109c69190610f83565b9050825f03610a8d5790506106bd565b5f670de0b6b3a76400006101e051610abc6101fe87670de0b6b3a7640000610ab59190610ea2565b88906106c3565b610ac69190610edc565b61012051610ad49190610f02565b610ade9190610f31565b610ae790610faa565b90505f680755bf798b4a1bf1e48213610b2f57610b2a610b096109c684610522565b610b1b90670de0b6b3a7640000610f70565b670de0b6b3a7640000906106c3565b610b31565b5f5b9050670de0b6b3a7640000610b5e6101fe610b4c8489610d4c565b61091890670de0b6b3a7640000610ea2565b61010051610b6b90610faa565b610b759190610f02565b610b7f9190610f31565b91505f610bad6109c6680755bf798b4a1bf1e48513610b9e5784610522565b680755bf798b4a1bf1e4610522565b9050610bba845f19610ec9565b811115610bce575f199450505050506106bd565b610bd884826106a6565b979650505050505050565b5f808211610bef575f80fd5b5060016001600160801b03821160071b82811c6001600160401b031060061b1782811c63ffffffff1060051b1782811c61ffff1060041b1782811c60ff10600390811b90911783811c600f1060021b1783811c909110821b1791821c111790565b828202811515841585830485141716610c67575f80fd5b6001826001830304018115150290509392505050565b828202811515841585830485141716610c94575f80fd5b0492915050565b60b581600160881b8110610cb45760409190911b9060801c5b69010000000000000000008110610cd05760209190911b9060401c5b650100000000008110610ce85760109190911b9060201c5b63010000008110610cfe5760089190911b9060101c5b62010000010260121c80820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c908190048111900390565b5f8082121561037b575f80fd5b5f6106ba8383670de0b6b3a7640000610c7d565b60405161016081016001600160401b0381118282101715610d8f57634e487b7160e01b5f52604160045260245ffd5b60405290565b80516001600160a01b0381168114610dab575f80fd5b919050565b5f80828403610180811215610dc3575f80fd5b61016080821215610dd2575f80fd5b610dda610d60565b9150845182526020850151602083015260408501516040830152606085015160608301526080850151608083015260a085015160a083015260c085015160c083015260e085015160e0830152610100808601518184015250610120808601518184015250610140808601518184015250819350610e58818601610d95565b925050509250929050565b634e487b7160e01b5f52600160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176106bd576106bd610e77565b818103818111156106bd576106bd610e77565b634e487b7160e01b5f52601260045260245ffd5b5f82610ed757610ed7610eb5565b500490565b8181035f831280158383131683831282161715610efb57610efb610e77565b5092915050565b8082025f8212600160ff1b84141615610f1d57610f1d610e77565b81810583148215176106bd576106bd610e77565b5f82610f3f57610f3f610eb5565b600160ff1b82145f1984141615610f5857610f58610e77565b500590565b5f82610f6b57610f6b610eb5565b500690565b808201808211156106bd576106bd610e77565b8082018281125f831280158216821582161715610fa257610fa2610e77565b505092915050565b5f600160ff1b8201610fbe57610fbe610e77565b505f0390565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051611dad6111335f395f61013b01525f61043a01525f6101ea01525f8181610273015281816104af01528181610532015281816105b9015281816106ab0152818161072e015281816107cf01528181610d2301528181610de801528181610e9301528181611649015281816117010152818161178e0152818161181e015281816118ae015261193d01525f61103601525f81816104610152818161067a01528181610c840152610cb101525f818161039f0152818161097701526109e901525f81816104880152610bc701525f81816103ed0152610c1201525f818161019c0152610b9301525f8181610211015261107c01525f8181610175015261112f01525f61035101525f81816103c60152610fc501525f81816101c30152610f9a01525f81816103780152610feb0152611dad5ff3fe608060405234801561000f575f80fd5b5060043610610132575f3560e01c806389035730116100b4578063d9641e6211610079578063d9641e62146103e8578063d9d9048d1461040f578063df635f3d14610422578063dfb08e1014610435578063ece1d6e51461045c578063ef633e3014610483575f80fd5b806389035730146102c05780638958401f1461034c578063b996993414610373578063be8203371461039a578063d8372685146103c1575f80fd5b806351b8b491116100fa57806351b8b4911461020c57806362caa049146102335780637c21fb1d1461025b57806380f556051461026e57806384a87466146102ad575f80fd5b80630481520b14610136578063148a1300146101705780631cd16f141461019757806326980121146101be5780634d6fc522146101e5575b5f80fd5b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b610246610241366004611aff565b6104aa565b60408051928352602083019190915201610167565b61015d610269366004611b28565b61066a565b6102957f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610167565b61015d6102bb366004611b48565b6106a7565b6102c8610831565b60405161016791905f61016082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525061014080840151818401525092915050565b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b61015d61041d366004611b5f565b6108eb565b61015d610430366004611b5f565b610cf3565b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b5f805f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e94b3c216040518163ffffffff1660e01b8152600401602060405180830381865afa158015610509573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061052d9190611b96565b90505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eee8c9e06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561058c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b09190611b96565b905061063c82827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638c3cba5a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610613573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106379190611b96565b610f29565b925061065e825f0361064e575f610658565b6106588284610f47565b84610f5b565b93505050935093915050565b5f61069e6106788484610f5b565b7f00000000000000000000000000000000000000000000000000000000000000006111cb565b90505b92915050565b5f807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e0af0086040518163ffffffff1660e01b8152600401602060405180830381865afa158015610705573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107299190611b96565b90505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631a90f1866040518163ffffffff1660e01b8152600401602060405180830381865afa158015610788573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107ac9190611b96565b9050610829825f036107be575f6107c8565b6107c88284610f47565b61026984847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638c3cba5a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610613573d5f803e3d5ffd5b949350505050565b6108836040518061016001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b5060408051610160810182525f5481526001546020820152600254918101919091526003546060820152600454608082015260055460a082015260065460c082015260075460e0820152600854610100820152600954610120820152600a5461014082015290565b5f85421061090c576040516305a29e1160e51b815260040160405180910390fd5b8184111561092d576040516386a8c2bd60e01b815260040160405180910390fd5b815f036109455761093e835f610f5b565b9050610cea565b6109726040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b6109ae7f00000000000000000000000000000000000000000000000000000000000000006109a888670de0b6b3a7640000611bc1565b906111e0565b8082526109cc906109c790670de0b6b3a7640000611bc1565b6111f4565b6020820152610a1f6ec097ce7bc90715b34b9f1000000000610a0e7f000000000000000000000000000000000000000000000000000000000000000086611bc1565b610a18888a611bc1565b9190611298565b60408201526020810151610a32906112b6565b610a4490670de0b6b3a7640000611bd8565b610a5182602001516112b6565b610a5b9190611bfe565b8151610a66906112b6565b610a7890671bc16d674ec80000611bd8565b610a91906ec097ce7bc90715b34b9f1000000000611bfe565b610a9b9190611c41565b6060820152610adb610ab06224ea0042611c6d565b610abd6224ea0089611bc1565b610ac79042611c80565b610ad19190611c93565b6109a8428a611c93565b8160800181815250505f610c70670de0b6b3a764000080670de0b6b3a764000080610b0987604001516112b6565b6060880151610b2090670de0b6b3a7640000611bd8565b610b2a9190611bfe565b610b349190611c41565b670de0b6b3a7640000610b60610b5b8960400151670de0b6b3a76400006109c79190611bc1565b6112b6565b8860600151610b6f9190611bfe565b610b799190611c41565b610b839190611ca6565b610b8d9190611bd8565b610bb7907f0000000000000000000000000000000000000000000000000000000000000000611bfe565b610bc19190611c41565b610beb907f0000000000000000000000000000000000000000000000000000000000000000611ca6565b610c45670de0b6b3a7640000610c0c610c0788608001516112b6565b6112ce565b610c36907f0000000000000000000000000000000000000000000000000000000000000000611bfe565b610c409190611c41565b611477565b610c4f9190611bfe565b610c599190611c41565b610c6b90670de0b6b3a7640000611ca6565b6115ea565b90505f610c7d8686610f5b565b9050610ca97f0000000000000000000000000000000000000000000000000000000000000000836111e0565b8110610cda577f00000000000000000000000000000000000000000000000000000000000000009350505050610cea565b610ce481836115f7565b93505050505b95945050505050565b5f854210610d14576040516305a29e1160e51b815260040160405180910390fd5b5f610d1e8761160b565b90505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eee8c9e06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d7d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610da19190611b96565b90505f610dae8888611c80565b90505f610dc4610dbe8989611a12565b836111cb565b610dce9083611c93565b9050610f1b610ddd428c611c93565b6301e13380610a188d7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630e52dbec6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e42573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e669190611ccd565b60ff16610e748d898c611a20565b8a5f03610e81575f610e8b565b610e8b8a8c610f47565b61041d8c8c8b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638c3cba5a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610eed573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f119190611b96565b6106379190611c80565b9a9950505050505050505050565b5f835f03610f37575f610829565b61082984610f458486611c80565b905b5f61069e83670de0b6b3a764000084611a47565b5f81831115610f7d576040516386a8c2bd60e01b815260040160405180910390fd5b670de0b6b3a76400008210610f9457505f196106a1565b5f61101a7f0000000000000000000000000000000000000000000000000000000000000000611010610b5b610fe9887f0000000000000000000000000000000000000000000000000000000000000000611c93565b7f0000000000000000000000000000000000000000000000000000000000000000906111e0565b610c6b9190611ca6565b9050825f0361102a5790506106a1565b5f670de0b6b3a76400007f000000000000000000000000000000000000000000000000000000000000000061106c610c076110658885611c93565b88906111e0565b6110769190611bd8565b6110a0907f0000000000000000000000000000000000000000000000000000000000000000611bfe565b6110aa9190611c41565b6110b390611cf4565b90505f680755bf798b4a1bf1e482136110fb576110f66110d5610c6b84611477565b6110e790670de0b6b3a7640000611c80565b670de0b6b3a7640000906111e0565b6110fd565b5f5b9050670de0b6b3a764000061112a610c076111188489611a74565b610b5b90670de0b6b3a7640000611c93565b6111537f0000000000000000000000000000000000000000000000000000000000000000611cf4565b61115d9190611bfe565b6111679190611c41565b91505f611195610c6b680755bf798b4a1bf1e485136111865784611477565b680755bf798b4a1bf1e4611477565b90506111a2845f19611d0e565b8111156111b6575f199450505050506106a1565b6111c084826115f7565b979650505050505050565b5f8183106111d9578161069e565b5090919050565b5f61069e83670de0b6b3a764000084611298565b60b581600160881b811061120d5760409190911b9060801c5b690100000000000000000081106112295760209190911b9060401c5b6501000000000081106112415760109190911b9060201c5b630100000081106112575760089190911b9060101c5b62010000010260121c80820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c908190048111900390565b8282028115158415858304851417166112af575f80fd5b0492915050565b5f6001600160ff1b038211156112ca575f80fd5b5090565b5f8082136112da575f80fd5b5f60606112e684611a88565b03609f8181039490941b90931c6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b393909302929092017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b5f680248ce36a70cb26b3e19821361149057505f919050565b680755bf798b4a1bf1e582126114a4575f80fd5b6503782dace9d9604e83901b0591505f60606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b39881029093036c240c330e9fb2d9cbaf0fd5aafb1981018102606090811d6d0277594991cfc85f6e2461837cd9018202811d6d1a521255e34f6a5061b25ef1c9c319018202811d6db1bbb201f443cf962f1a1d3db4a5018202811d6e02c72388d9f74f51a9331fed693f1419018202811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765084018402831d9081019084016d01d3967ed30fc4f89c02bab5708119010290911d6e0587f503bb6ea29d25fcb740196450019091026d360d7aeea093263ecc6e0ecb291760621b010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b5f808212156112ca575f80fd5b5f61069e8383670de0b6b3a7640000611a47565b5f61163360405180608001604052805f81526020015f81526020015f81526020015f81525090565b604051634e7c505960e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690634e7c505990602401608060405180830381865afa158015611696573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116ba9190611d21565b60608501819052604085019190915260208401919091529082525f906116ff906116e49042611c93565b60608401516116f39087611c93565b60408501519190611298565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e0af0086040518163ffffffff1660e01b8152600401602060405180830381865afa15801561175b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061177f9190611b96565b6117899190611c80565b90505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e94b3c216040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117e8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061180c9190611b96565b90505f6119d66119c483851061193b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fb0fc4c36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611878573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061189c9190611d54565b6118ac9063ffffffff1642611c93565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630539fa8c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611908573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061192c9190611b96565b6119369190611bc1565b6119bb565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633aa18d6f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611997573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119bb9190611b96565b610c4090611cf4565b610c6b90670de0b6b3a7640000611bd8565b90506119e28184611a74565b6119fe6119f783670de0b6b3a7640000611c93565b8490611a74565b611a089190611c80565b9695505050505050565b5f8183116111d9578161069e565b5f8115801590611a2f57508383115b611a39575f610829565b61082982610f458686611c93565b828202811515841585830485141716611a5e575f80fd5b6001826001830304018115150290509392505050565b5f61069e8383670de0b6b3a7640000611298565b5f808211611a94575f80fd5b5060016fffffffffffffffffffffffffffffffff821160071b82811c67ffffffffffffffff1060061b1782811c63ffffffff1060051b1782811c61ffff1060041b1782811c60ff10600390811b90911783811c600f1060021b1783811c909110821b1791821c111790565b5f805f60608486031215611b11575f80fd5b505081359360208301359350604090920135919050565b5f8060408385031215611b39575f80fd5b50508035926020909101359150565b5f60208284031215611b58575f80fd5b5035919050565b5f805f805f60a08688031215611b73575f80fd5b505083359560208501359550604085013594606081013594506080013592509050565b5f60208284031215611ba6575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176106a1576106a1611bad565b8181035f831280158383131683831282161715611bf757611bf7611bad565b5092915050565b8082025f8212600160ff1b84141615611c1957611c19611bad565b81810583148215176106a1576106a1611bad565b634e487b7160e01b5f52601260045260245ffd5b5f82611c4f57611c4f611c2d565b600160ff1b82145f1984141615611c6857611c68611bad565b500590565b5f82611c7b57611c7b611c2d565b500690565b808201808211156106a1576106a1611bad565b818103818111156106a1576106a1611bad565b8082018281125f831280158216821582161715611cc557611cc5611bad565b505092915050565b5f60208284031215611cdd575f80fd5b815160ff81168114611ced575f80fd5b9392505050565b5f600160ff1b8201611d0857611d08611bad565b505f0390565b5f82611d1c57611d1c611c2d565b500490565b5f805f8060808587031215611d34575f80fd5b505082516020840151604085015160609095015191969095509092509050565b5f60208284031215611d64575f80fd5b815163ffffffff81168114611ced575f80fdfea26469706673582212201a3e927c24894737a8f32127abf23c8127f2e214ab80286261583d2c5abb9a1064736f6c63430008190033";

type InterestRateModelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InterestRateModelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InterestRateModel__factory extends ContractFactory {
  constructor(...args: InterestRateModelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    p: ParametersStruct,
    market_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(p, market_, overrides || {});
  }
  override deploy(
    p: ParametersStruct,
    market_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(p, market_, overrides || {}) as Promise<
      InterestRateModel & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): InterestRateModel__factory {
    return super.connect(runner) as InterestRateModel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InterestRateModelInterface {
    return new Interface(_abi) as InterestRateModelInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InterestRateModel {
    return new Contract(address, _abi, runner) as unknown as InterestRateModel;
  }
}
