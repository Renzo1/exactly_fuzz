/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockInterestRateModel,
  MockInterestRateModelInterface,
} from "../../../contracts/mocks/MockInterestRateModel";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maturity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fixedBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fixedRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "floatingRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "floatingRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "setRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b50604051610273380380610273833981016040819052602b916031565b5f556047565b5f602082840312156040575f80fd5b5051919050565b61021f806100545f395ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c80632c4e722e1461006457806334fcf4371461007e5780637c21fb1d1461009257806384a87466146100a5578063d9d9048d146100b9578063df635f3d146100d2575b5f80fd5b61006c5f5481565b60405190815260200160405180910390f35b61009061008c36600461011e565b5f55565b005b61006c6100a0366004610135565b6100e5565b61006c6100b336600461011e565b505f5490565b61006c6100c7366004610155565b5f5495945050505050565b61006c6100e0366004610155565b6100ee565b5f545b92915050565b5f6301e133806100fe42886101a0565b5f5461010a91906101b3565b61011491906101ca565b9695505050505050565b5f6020828403121561012e575f80fd5b5035919050565b5f8060408385031215610146575f80fd5b50508035926020909101359150565b5f805f805f60a08688031215610169575f80fd5b505083359560208501359550604085013594606081013594506080013592509050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156100e8576100e861018c565b80820281158282048414176100e8576100e861018c565b5f826101e457634e487b7160e01b5f52601260045260245ffd5b50049056fea264697066735822122027b0078f768a889ee1b87a9502e480acd305e472371242679c4d8ab9b0c2771264736f6c63430008190033";

type MockInterestRateModelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockInterestRateModelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockInterestRateModel__factory extends ContractFactory {
  constructor(...args: MockInterestRateModelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    rate_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(rate_, overrides || {});
  }
  override deploy(
    rate_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(rate_, overrides || {}) as Promise<
      MockInterestRateModel & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockInterestRateModel__factory {
    return super.connect(runner) as MockInterestRateModel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockInterestRateModelInterface {
    return new Interface(_abi) as MockInterestRateModelInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockInterestRateModel {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockInterestRateModel;
  }
}
